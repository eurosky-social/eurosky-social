controller:
  replicaCount: ${replica_count}

  # TODO: Increase for production (cpu: 100m, memory: 90Mi request / 256Mi limit)
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      memory: 128Mi

  containerSecurityContext:
    runAsNonRoot: true
    runAsUser: 101
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
      add:
        - NET_BIND_SERVICE

  # TODO: Use DoNotSchedule in production for strict zone distribution
  topologySpreadConstraints:
    - topologyKey: topology.kubernetes.io/zone
      maxSkew: ${topology_max_skew}
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/instance: ${release_name}
          app.kubernetes.io/component: controller

  # TODO: Use requiredDuringScheduling in production with 3+ nodes
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: ingress-nginx
                app.kubernetes.io/instance: ${release_name}
                app.kubernetes.io/component: controller
            topologyKey: kubernetes.io/hostname

  service:
    enabled: false

  metrics:
    enabled: true
    port: 10254
    # serviceMonitor:
    #   enabled: true

  admissionWebhooks:
    enabled: true
    failurePolicy: Fail

  podDisruptionBudget:
    enabled: true
    minAvailable: 1
